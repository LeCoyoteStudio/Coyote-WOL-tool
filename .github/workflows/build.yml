name: Build CoyoteWOLtool SPK

on:
  push:
    branches: [ main ] # Se déclenche à chaque push sur la branche 'main'
  workflow_dispatch: # Permet de lancer la compilation manuellement

jobs:
  build:
    runs-on: ubuntu-latest # Utilise un environnement Linux standard

    steps:
      # Étape 1: Récupérer le code de votre projet
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2: Cloner l'environnement de compilation spksrc
      - name: Clone spksrc
        run: git clone https://github.com/SynoCommunity/spksrc.git /tmp/spksrc

      # Étape 3: Préparer les fichiers pour la compilation
      - name: Prepare build environment
        run: |
          mkdir -p /tmp/spksrc/spk/CoyoteWOLtool
          cp -a $GITHUB_WORKSPACE/* /tmp/spksrc/spk/CoyoteWOLtool/

      # NOUVELLE ÉTAPE (AMÉLIORÉE) : Correction des fins de ligne pour garantir la compatibilité
      - name: Fix line endings for all text files
        run: |
          echo "Fixing line endings in spksrc build system..."
          find /tmp/spksrc/mk -type f -name "*.mk" -exec sed -i 's/\r$//' {} +
          echo "Fixing line endings in CoyoteWOLtool project files..."
          find /tmp/spksrc/spk/CoyoteWOLtool -type f -not -name "*.png" -exec sed -i 's/\r$//' {} +
          
      # Étape 4: Lancer la compilation
      - name: Build the package
        run: make -C /tmp/spksrc/spk/CoyoteWOLtool arch-noarch

      # Étape 5: Téléverser le paquet .spk compilé comme un "artefact"
      - name: Upload SPK artifact
        uses: actions/upload-artifact@v4
        with:
          name: CoyoteWOLtool-spk
          path: /tmp/spksrc/packages/*.spk
